samp <- rnorm(n = 7, mean = 0, sd = 1)
plot(density(x = samp))
samp2 <- rnorm(n = 3, mean = 0, sd = 1)
lines(density(x = samp2), col = 2)
x <- seq(-5,5,.1)
lines(x, dnorm(x, 0,1), col=3)
samp <- rnorm(n = 7, mean = 0, sd = 1)
plot(density(x = samp))
samp2 <- rnorm(n = 3, mean = 0, sd = 1)
lines(density(x = samp2), col = 2)
x <- seq(-5,5,.1)
lines(x, dnorm(x, 0,1), col=3)
samp <- rnorm(n = 7, mean = 0, sd = 1)
plot(density(x = samp))
samp2 <- rnorm(n = 3, mean = 0, sd = 1)
lines(density(x = samp2), col = 2)
x <- seq(-5,5,.1)
lines(x, dnorm(x, 0,1), col=3)
samp <- rnorm(n = 7, mean = 0, sd = 1)
plot(density(x = samp))
samp2 <- rnorm(n = 3, mean = 0, sd = 1)
lines(density(x = samp2), col = 2)
x <- seq(-5,5,.1)
lines(x, dnorm(x, 0,1), col=3)
samp <- rnorm(n = 7, mean = 0, sd = 1)
plot(density(x = samp))
samp2 <- rnorm(n = 3, mean = 0, sd = 1)
lines(density(x = samp2), col = 2)
x <- seq(-5,5,.1)
lines(x, dnorm(x, 0,1), col=3)
samp <- rnorm(n = 7, mean = 0, sd = 1)
plot(density(x = samp))
samp2 <- rnorm(n = 3, mean = 0, sd = 1)
lines(density(x = samp2), col = 2)
x <- seq(-5,5,.1)
lines(x, dnorm(x, 0,1), col=3)
samp <- rnorm(n = 7, mean = 0, sd = 1)
plot(density(x = samp))
samp2 <- rnorm(n = 3, mean = 0, sd = 1)
lines(density(x = samp2), col = 2)
x <- seq(-5,5,.1)
lines(x, dnorm(x, 0,1), col=3)
samp <- rnorm(n = 7, mean = 0, sd = 1)
plot(density(x = samp))
samp2 <- rnorm(n = 3, mean = 0, sd = 1)
lines(density(x = samp2), col = 2)
x <- seq(-5,5,.1)
lines(x, dnorm(x, 0,1), col=3)
samp <- rnorm(n = 7, mean = 0, sd = 1)
plot(density(x = samp))
samp2 <- rnorm(n = 3, mean = 0, sd = 1)
lines(density(x = samp2), col = 2)
x <- seq(-5,5,.1)
lines(x, dnorm(x, 0,1), col=3)
samp <- rnorm(n = 7, mean = 0, sd = 1)
plot(density(x = samp))
samp2 <- rnorm(n = 3, mean = 0, sd = 1)
lines(density(x = samp2), col = 2)
x <- seq(-5,5,.1)
lines(x, dnorm(x, 0,1), col=3)
samp <- rnorm(n = 7, mean = 0, sd = 1)
plot(density(x = samp))
samp2 <- rnorm(n = 3, mean = 0, sd = 1)
lines(density(x = samp2), col = 2)
x <- seq(-5,5,.1)
lines(x, dnorm(x, 0,1), col=3)
samp <- rnorm(n = 7, mean = 0, sd = 1)
plot(density(x = samp))
samp2 <- rnorm(n = 3, mean = 0, sd = 1)
lines(density(x = samp2), col = 2)
x <- seq(-5,5,.1)
lines(x, dnorm(x, 0,1), col=3)
samp <- rnorm(n = 7, mean = 0, sd = 1)
plot(density(x = samp))
samp2 <- rnorm(n = 3, mean = 0, sd = 1)
lines(density(x = samp2), col = 2)
x <- seq(-5,5,.1)
lines(x, dnorm(x, 0,1), col=3)
samp <- rnorm(n = 7, mean = 0, sd = 1)
plot(density(x = samp))
samp2 <- rnorm(n = 3, mean = 0, sd = 1)
lines(density(x = samp2), col = 2)
x <- seq(-5,5,.1)
lines(x, dnorm(x, 0,1), col=3)
samp <- rnorm(n = 7, mean = 0, sd = 1)
plot(density(x = samp))
samp2 <- rnorm(n = 3, mean = 0, sd = 1)
lines(density(x = samp2), col = 2)
x <- seq(-5,5,.1)
lines(x, dnorm(x, 0,1), col=3)
samp <- rnorm(n = 7, mean = 0, sd = 1)
plot(density(x = samp))
samp2 <- rnorm(n = 3, mean = 0, sd = 1)
lines(density(x = samp2), col = 2)
x <- seq(-5,5,.1)
lines(x, dnorm(x, 0,1), col=3)
samp <- rnorm(n = 7, mean = 0, sd = 1)
plot(density(x = samp))
samp2 <- rnorm(n = 3, mean = 0, sd = 1)
lines(density(x = samp2), col = 2)
x <- seq(-5,5,.1)
lines(x, dnorm(x, 0,1), col=3)
samp <- rnorm(n = 7, mean = 0, sd = 1)
plot(density(x = samp))
samp2 <- rnorm(n = 3, mean = 0, sd = 1)
lines(density(x = samp2), col = 2)
x <- seq(-5,5,.1)
lines(x, dnorm(x, 0,1), col=3)
samp <- rnorm(n = 7, mean = 0, sd = 1)
plot(density(x = samp))
samp2 <- rnorm(n = 3, mean = 0, sd = 1)
lines(density(x = samp2), col = 2)
x <- seq(-5,5,.1)
lines(x, dnorm(x, 0,1), col=3)
samp <- rnorm(n = 7, mean = 0, sd = 1)
plot(density(x = samp))
samp2 <- rnorm(n = 3, mean = 0, sd = 1)
lines(density(x = samp2), col = 2)
x <- seq(-5,5,.1)
lines(x, dnorm(x, 0,1), col=3)
samp <- rnorm(n = 7, mean = 0, sd = 1)
plot(density(x = samp))
samp2 <- rnorm(n = 3, mean = 0, sd = 1)
lines(density(x = samp2), col = 2)
x <- seq(-5,5,.1)
lines(x, dnorm(x, 0,1), col=3)
samp <- rnorm(n = 7, mean = 0, sd = 1)
plot(density(x = samp))
samp2 <- rnorm(n = 3, mean = 0, sd = 1)
lines(density(x = samp2), col = 2)
x <- seq(-5,5,.1)
lines(x, dnorm(x, 0,1), col=3)
samp <- rnorm(n = 7, mean = 0, sd = 1)
plot(density(x = samp))
samp2 <- rnorm(n = 3, mean = 0, sd = 1)
lines(density(x = samp2), col = 2)
x <- seq(-5,5,.1)
lines(x, dnorm(x, 0,1), col=3)
samp <- rnorm(n = 7, mean = 0, sd = 1)
plot(density(x = samp))
samp2 <- rnorm(n = 3, mean = 0, sd = 1)
lines(density(x = samp2), col = 2)
x <- seq(-5,5,.1)
lines(x, dnorm(x, 0,1), col=3)
samp <- rnorm(n = 7, mean = 0, sd = 1)
plot(density(x = samp))
samp2 <- rnorm(n = 3, mean = 0, sd = 1)
lines(density(x = samp2), col = 2)
x <- seq(-5,5,.1)
lines(x, dnorm(x, 0,1), col=3)
samp <- rnorm(n = 7, mean = 0, sd = 1)
plot(density(x = samp))
samp2 <- rnorm(n = 3, mean = 0, sd = 1)
lines(density(x = samp2), col = 2)
x <- seq(-5,5,.1)
lines(x, dnorm(x, 0,1), col=3)
samp <- rnorm(n = 7, mean = 0, sd = 1)
plot(density(x = samp))
samp2 <- rnorm(n = 3, mean = 0, sd = 1)
lines(density(x = samp2), col = 2)
x <- seq(-5,5,.1)
lines(x, dnorm(x, 0,1), col=3)
c1 <- rbinom(1, 10, prob=.5)
c1
c1 <- rbinom(2, 10, prob=.5)
c1
c1 <- rbinom(100, 10, prob=.5)
c1
hist(c1)
c2 <- rbinom(100, 10, prob=.7)
par(c(2,1))
hist(c1)
hist(2)
hist(c2)
hist(c1)
hist(c2)
par(c(2,1))
mpar(c(2,1))
mpar(mfrow=c(2,1))
par(mfrow=c(2,1))
hist(c1)
hist(c2)
k.hat=sum(c1)/100
k.hat
sum(c1)
c1 <- rbinom(1, 100, prob=.5)
c2 <- rbinom(1, 100, prob=.7)
k.hat=c1/100
k.hat
c1
dbinom(c1, size=100, prob=k.hat)
c1
k <- c(0,1,.01)
k
k <- seq(0,1,.01)
k
y=dbinom(c1, 100, k.hat)
plot(y,k)
y=dbinom(c1, 100, k)
plot(y,k)
plot(k, y, type='l')
dbinom(c1, size=100, prob=k.hat)
L1=dbinom(c1, size=100, prob=k.hat)
L1=dbinom(c2, size=100, prob=c2/100)
L1=dbinom(c1, size=100, prob=k.hat)
L2=dbinom(c2, size=100, prob=c2/100)
L2
L1.infer=dbinom(c1, size=100, prob=k.hat)
L1.fair=dbinom(c1, size=100, prob=.5)
L1.fair
2*1-2*log(L1.infer)
2*0-2*log(L1.fair)
L2=dbinom(c2, size=100, prob=c2/100)
L2.fair=dbinom(c2, size=100, prob=.5)
2*1-2*log(L2)
2*0-2*log(L2.fair)
c2 <- rbinom(1, 3, prob=.7)
c2
L2=dbinom(c2, size=100, prob=c2/100)
L2.fair=dbinom(c2, size=100, prob=.5)
2*1-2*log(L2)
2*0-2*log(L2.fair)
L2=dbinom(c2, size=3, prob=c2/3)
L2.fair=dbinom(c2, size=3, prob=.5)
2*1-2*log(L2)
2*0-2*log(L2.fair)
c2
c2/3
2*1-2*log(L2)
2*0-2*log(L2.fair)
Bin.ln <- function(par, size, k){
log(dbinom(k, size=size, prob=par))
}
c1
nlm(Bin.ln, c(0,1), size=100, k=c1)
Bin.ln <- function(par, size, k){
-1*log(dbinom(k, size=size, prob=par))
}
nlm(Bin.ln, c(0,1), size=100, k=c1)
nlm(Bin.ln, c(0.5), size=100, k=c1)
k <- seq(0,1,.01)
Bin.lnfunction(par=k, size, k)
Bin.ln(par=k, size, k)
Bin.ln(par=k, size=100, k=45)
x=Bin.ln(par=k, size=100, k=45)
y=Bin.ln(par=k, size=100, k=45)
plot(k,y)
optimize(c(.1), Bin.ln, size=100, k=45, lower = 0, upper = 1)
Bin.ln <- function(par, size, k){
-1*log(dbinom(k, size=size, prob=par))
}
optimize(c(.1), Bin.ln, size=100, k=45, lower = 0, upper = 1)
optimize( Bin.ln, size=100, k=45, lower = 0, upper = 1)
optimize( Bin.ln, size=100, k=45, lower = 0, upper = 1)
plot(k,y)
res=optimize( Bin.ln, size=100, k=c1, lower = 0, upper = 1)
c1
res
res$objective
exp(res$objective)
exp(res$objective*-1)
dbinom(c1, size=100, prob=k.hat)
#--------
rnorm(100, 60, 20)
#--------
dt <- rnorm(100, 60, 20)
#--------
dt <- rnorm(100, 60, 5)
Norm.ln <- function(par, data){
-1*sum(log(dnorm(dt, par[1], par[2])))
}
optimize( Norm.ln, data=dt, lower = c(0,0), upper = c(200,200))
optimize( Norm.ln, data=dt, lower = c(0,0), upper = c(200,200))
Norm.ln(par=c(60,5), data=dt)
optimize( Norm.ln, data=dt, lower = c(0,1), upper = c(200,50))
optimize( Norm.ln, data=dt, lower = c(0,1), upper = c(200,10))
warnings()
optimize( Norm.ln, data=dt, lower = c(1,1), upper = c(150,10))
optimize(par(c(1,1)) Norm.ln, data=dt, lower = c(1,1), upper = c(150,10))
optimize(par(c(1,1)), Norm.ln, data=dt, lower = c(1,1), upper = c(150,10))
optim(par(c(1,1)), Norm.ln, data=dt, lower = c(1,1), upper = c(150,10))
optim(par(c(1,1)), Norm.ln, data=dt)
optim(par(c(50,1)), Norm.ln, data=dt)
res=optim( Bin.ln, size=100, k=c1, lower = 0, upper = 1)
optim(par=c(1,1), Norm.ln, data=dt)
optim(par=c(1,1), Norm.ln, data=dt, lower = 1, upper = 200)
optim(par=c(1,1), Norm.ln, data=dt, lower = c(1,1), upper = c(200,200))
optim(par=c(1,1), Norm.ln, data=dt)
optim(par=c(10,2), Norm.ln, data=dt)
optim(par=c(10,2), Norm.ln, data=dt)
optim(par=c(10,2), Norm.ln, data=dt)
optim(par=c(10,2), Norm.ln, data=dt, lower = c(1,1), method ="Brent", upper = c(200,200))
optim(par=c(10,2), Norm.ln, data=dt)
heads1=rbinom(1, 100, prob=.5)
heads2=rbinom(1, 100, prob=.7)
heads1
heads2
heads1=rbinom(1, 100, prob= .5)
heads1
heads2=rbinom(1, 100, prob= )
heads2
heads1=rbinom(1, 100, prob= .5)
heads2=rbinom(1, 100, prob= .7)
heads1=rbinom(1, 100, prob= .5)
heads2=rbinom(1, 100, prob= .7)
heads1
heads2
4300/12
cars
plot(cars)
4000*.19
4000*.81
4000*.78
4300*.78
4300*.22
3117-2737
33494/12
4300*.78
4300*12
4000*.7
install.packages("SP2000")
library(SP2000)
152*2.8
152*2.8
6200*12
reticulate::repl_python()
reticulate::repl_python()
py_install("pydot")
py_install("pydot")
library(reticulate)
py_install("pydot")
n
reticulate::repl_python()
library(reticulate)
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
library(XML)
# Load the packages required to read XML files.
library("XML")
library("methods")
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
py_install("pandas")
library(reticulate)
py_install("pandas")
reticulate::repl_python()
py_install("lxml.etree")
py_install("lxml")
reticulate::repl_python()
vect=c(4,5,3,2)
# Pick an element from the vector
element <- vect[1]
partition <- vect[-1]
element
partition
partition < element
# Reorder vector so that integers less than element
# come before, and all integers greater come after.
v1 <- partition[partition < element]
v1
v2 <- partition[partition >= element]
v2
vect=c(3,4,5,9,8)
# Stop if vector has length of 1
if (length(vect) <= 1) {
return(vect)
}
# Pick an element from the vector
element <- vect[1]
partition <- vect[-1]
element
partition
# Reorder vector so that integers less than element
# come before, and all integers greater come after.
v1 <- partition[partition < element]
v1
v2 <- partition[partition >= element]
v2
quickSort <- function(vect) {
# Args:
#  vect: Numeric Vector
# Stop if vector has length of 1
if (length(vect) <= 1) {
return(vect)
}
# Pick an element from the vector
element <- vect[1]
partition <- vect[-1]
# Reorder vector so that integers less than element
# come before, and all integers greater come after.
v1 <- partition[partition < element]
v2 <- partition[partition >= element]
# Recursively apply steps to smaller vectors.
v1 <- quickSort(v1)
v2 <- quickSort(v2)
return(c(v1, element, v2))
}
quickSort(vect)
install.packages("RNeXML", deps = TRUE)
library(RNeXML)
a <- nexml.otu()
a
setwd("~/Documents/My_papers/AISM/Cercus_reasoning/AISM_Reasoning/results")
nexml <- nexml_read('aism_instances-Konclude.owl')
nexml <- nexml_read('aism_instances-Konclude.xml')
nexml
xml <- read_xml('aism_instances-Konclude.xml')
library(xml2)
library(tidyverse)
xml <- read_xml('aism_instances-Konclude.xml')
xml
xml_name(xml)
print(xml_children(xml))
xml[50]
xml[1]
print(xml[1])
print(xml[[1]])
xml$doc
xml_find_all(xml, ".//node")
xml_find_all(xml, "")
xml_find_all(xml, "./")
xml_find_all(xml, ".//")
xml
xml_find_all(xml, ".//b")
xml_find_all(xml, ".//...")
xml_attr(xml, "id")
xml_attr(xml, "rdf:about")
xml_attr(xml)
xml_find_all(xml, '//*')
xml_find_all(xml, 'owl:Class')
xml_find_all(xml, 'owl:Thing')
xml_attrs(xml)
xml_find_all(xml, 'owl:Thing')
nn <- xml_find_all(xml, 'owl:Thing')
nn[1]
xml_attrs(nn[1])
xml_attrs(nn[[1]])
xml_find_all(xml, 'rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual')
xml_find_all(xml, 'rdf:resource="http://www.w3.org/2002/07/owl#NamedIndividual"')
xml_find_all(xml, "http://www.w3.org/2002/07/owl#NamedIndividual")
xml
xml_attrs(nn[[1]])
nn[[1]]
xml_find_all(xml, "//http://www.w3.org/2002/07/owl#NamedIndividual")
xml_find_all(xml, ".//http://www.w3.org/2002/07/owl#NamedIndividual")
nn[[1]]
xml_find_all(xml, ".//rdf:resource")
xml_find_all(xml, "rdf:resource")
xml_find_all(xml, "//rdf:resource")
xml_attr(xml, 'rdf:resource')
xml_attrs(nn[[1]])
xml_attrs(nn[[1]][1])
nn[[1]][1]
nn[[1]]
xml_attrs(nn[[1]][[1]])
nn <- xml_find_all(xml, 'rdf:type')
nn
xml_find_all(xml, 'rdf:type')
xml_attrs(xml)
xml_find_all(xml, './/rdf:type')
nn <- xml_find_all(xml, './/rdf:type')
xml_attrs(nn[[1]])
xml_attr(xml, 'resource')
xml_attrs(nn[[1]])
xml_find_all(xml, ".//resource")
xml_find_all(xml, "resource")
xml_find_all(xml, "//resource")
xml_find_all(xml, "//rdf:type[@resource]")
xml_find_all(xml, "//rdf:type[@resource]")
xml_find_all(xml, "//rdf:type[@resource= 'http://www.w3.org/2002/07/owl#NamedIndividual']")
xml_find_all(xml, "//rdf:type[@resource= http://www.w3.org/2002/07/owl#NamedIndividual]")
xml_find_all(xml, "//rdf:type[@resource= NamedIndividual]")
xml_find_all(xml, "//rdf:type[@resource= 'NamedIndividual']")
xml_find_all(xml, "//rdf:type[@resource= 'NamedIndividual'][1]")
nn
xml_attrs(nn[[1]])
xml_find_all(xml, "//rdf:type[@resource= 'http://www.w3.org/2002/07/owl#NamedIndividual']")
xml_find_all(xml, "//rdf:type[@rdf:resource= 'http://www.w3.org/2002/07/owl#NamedIndividual']")
ind <- xml_find_all(xml, "//rdf:type[@rdf:resource= 'http://www.w3.org/2002/07/owl#NamedIndividual']")
xml_parent(ind)
reticulate::repl_python()
setwd("~/Documents/My_papers/Phenoscript_2021")
result <- xmlParse(file = "ophu.txt")
ophu.txt
#--------
library("XML")
library("methods")
setwd("~/Documents/My_papers/Phenoscript_2021")
result <- xmlParse(file = "ophu.txt")
result
result <- xmlParse(file = "ophu.txt")
result <- xmlParse(file = "ophu.txt")
result
reticulate::repl_python()
setwd("~/Documents/My_papers/Phenoscript_2021/Phenoscript")
reticulate::repl_python()
library(xml2)
library(tidyverse)
xml <- read_xml('ophu_xml.txt')
reticulate::repl_python()
setwd("~/Documents/My_papers/Phenoscript_2021/Phenoscript/src")
reticulate::repl_python()
reticulate::repl_python()
