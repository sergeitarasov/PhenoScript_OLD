print('getcwd:      ', os.getcwd())
import os
print('getcwd:      ', os.getcwd())
print('__file__:    ', __file__)
print('__file__:    ', __file__)
print('basename:    ', os.path.basename(__file__))
print('dirname:     ', os.path.dirname(__file__))
os.path.basename()
os.path.dirname()
__file__
os.path.abspath(os.getcwd())
os.getcwd()
from pathlib import Path
print("File      Path:", Path(__file__).absolute())
print("Directory Path:", Path().absolute()) # Directory of current working directory, not __file__
print("File      Path:", Path(__file__).absolute())
import os
os.getcwd()
os.chdir('../src')
os.getcwd()
os.chdir('/src')
os.getcwd()
os.chdir('./src')
os.getcwd()
import os
from pathlib import Path
os.getcwd()
path_src="./src/"
exec(open(path_src+"phs_xml.py").read())
exec(open(path_src+"phs_parser.py").read())
exec(open(path_src+"phs_lbs2iri.py").read())
txt = Path('data/Gryonoides.phs').read_text()
txt
isBalanced(txt)
out=grammar1.parseString(txt)
print(out)
out_xml=phenoscriptParse(out)
print(out_xml)
print(out_xml, file=open('results/phs_Gryo.xml','w'))
fl='results/dictionary/Gryo_dic.csv'
fl
fl='results/dictionary/Gryo_dic.csv'
iriDic=labels2IRI(fl)
iriDic.translate('bearer_of')
tree = ET.parse('results/phs_Gryo.xml')
ET.register_namespace('phs', 'https://github.com/sergeitarasov/PhenoScript')
root1 = tree.getroot()
translatePhs(root1, iriDic)
print(ET.tostring(root1, encoding='utf8').decode('utf8'))
tree = ET.parse(out_xml)
tree = ET.fromstring(out_xml)
tree
ET.register_namespace('phs', 'https://github.com/sergeitarasov/PhenoScript')
root1 = tree.getroot()
root1
out_xml
tree = ET.fromstring(out_xml)
ET.register_namespace('phs', 'https://github.com/sergeitarasov/PhenoScript')
translatePhs(tree, iriDic)
exec(open(path_src+"phs_xml.py").read())
exec(open(path_src+"phs_parser.py").read())
exec(open(path_src+"phs_lbs2iri.py").read())
file_phs='data/Gryonoides.phs'
aa=['a','a','b']
unique(aa)
reticulate::repl_python()
library(xml2)
library(dplyr)
library(stringr)
library(XML)
source('R/phsFunctions.R')
# Input
dic.path.in <- 'phsDictionary'
data.path.in <- 'data'
onto.in <- file.path(data.path.in, 'Gryonoides_merged_ontologies.owl')
phs.file.in <- file.path(data.path.in, 'Gryonoides.phs')
# Output
results.out <- 'results'
dic.path.out <- 'results/dictionary'
dic.out <- file.path(dic.path.out, 'Gryo_dic.csv')
xml.out <- file.path(results.out, 'phs_Gryo.xml')
instance_IRI='https://orcid.org/0000-0001-5237-2330/'
onto.in
xml_instances.out <- 'results/Gryo_only_instances.owl'
file.out <- 'results/phsGryo_merged.owl'
#robot merge --input Gryonoides_merged_ontologies.owl --input xml_root.xml --output results/merged2.owl
merge_onto <-paste0('robot merge --input ', onto.in, ' --input ', xml_instances.out, ' --output ', file.out)
merge_onto
system(merge_onto)
phs.file.in
xml.out
phs
library(xml2)
source('R/write_xml.R')
phs <- read_xml(xml.out)
# Input
dic.path.in <- 'phsDictionary'
data.path.in <- 'data'
onto.in <- file.path(data.path.in, 'Gryonoides_merged_ontologies.owl')
phs.file.in <- file.path(data.path.in, 'Gryonoides.phs')
# Output
results.out <- 'results'
dic.path.out <- 'results/dictionary'
dic.out <- file.path(dic.path.out, 'Gryo_dic.csv')
xml.out <- file.path(results.out, 'phs_Gryo.xml')
instance_IRI='https://orcid.org/0000-0001-5237-2330/'
# Namespace for XML to OWL
gryo.namespace =c('obo'="http://purl.obolibrary.org/obo/",
rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#",
'owl'="http://www.w3.org/2002/07/owl#",
rdfs="http://www.w3.org/2000/01/rdf-schema#",
sta ="https://orcid.org/0000-0001-5237-2330/",
'oboI'="http://www.geneontology.org/formats/oboInOwl#",
'newT'="http://github.com/sergeitarasov/PhenoScript/gryo/",
'pato'="http://purl.obolibrary.org/obo/pato#"
)
phs <- read_xml(xml.out)
print(phs)
onto.in
PhenoScriptToOWL(PS=phs, phs.namespace=gryo.namespace, onto.in,
xml_instances.out='results/Gryo_only_instances.owl', file.out='results/phsGryo_merged.owl')
#setwd("~/Documents/My_papers/Phenoscript_2021/Gryonoides/Phenoscript")
library(reticulate)
# Input
dic.path.in <- 'phsDictionary'
data.path.in <- 'data'
onto.in <- file.path(data.path.in, 'Gryonoides_merged_ontologies.owl')
phs.file.in <- file.path(data.path.in, 'Gryonoides.phs')
# Output
results.out <- 'results'
dic.path.out <- 'results/dictionary'
dic.out <- file.path(dic.path.out, 'Gryo_dic.csv')
xml.out <- file.path(results.out, 'phs_Gryo.xml')
instance_IRI='https://orcid.org/0000-0001-5237-2330/'
# Namespace for XML to OWL
gryo.namespace =c('obo'="http://purl.obolibrary.org/obo/",
rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#",
'owl'="http://www.w3.org/2002/07/owl#",
rdfs="http://www.w3.org/2000/01/rdf-schema#",
sta ="https://orcid.org/0000-0001-5237-2330/",
'oboI'="http://www.geneontology.org/formats/oboInOwl#",
'newT'="http://github.com/sergeitarasov/PhenoScript/gryo/",
'pato'="http://purl.obolibrary.org/obo/pato#"
)
##  ............................................................................
##  Make Dictionary                                                         ####
make_dic <-paste0('./', file.path(dic.path.in, 'cmdPhsDic.R'), ' ', onto.in, ' ', dic.out )
system(make_dic)
##  ............................................................................
##  Make Snippets                                                           ####
make_snps <-paste0('./', file.path(dic.path.in, 'cmdSnips.R'), ' ', dic.out, ' ', 'results/dictionary/snippets.cson' )
system(make_snps)
py_run_file("src/phs_init.py")
pyPhenoScriptToXML <- sprintf("PhenoScriptToXML(file_phs='%s', file_phsDic='%s', xml_out='%s', instance_IRI='%s')",
phs.file.in, dic.out, xml.out, instance_IRI)
py_run_string(pyPhenoScriptToXML)
library(xml2)
source('R/write_xml.R')
phs <- read_xml(xml.out)
print(phs)
xml.out
xml.out
PhenoScriptToOWL(PS=phs, phs.namespace=gryo.namespace, onto.in,
xml_instances.out='results/Gryo_only_instances.owl', file.out='results/phsGryo_merged.owl')
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
setwd("~/Documents/My_papers/Phenoscript_2021/Gryonoides/Phenoscript")
library(reticulate)
# Input
dic.path.in <- 'phsDictionary'
data.path.in <- 'data'
onto.in <- file.path(data.path.in, 'Gryonoides_merged_ontologies.owl')
phs.file.in <- file.path(data.path.in, 'Gryonoides.phs')
# Output
results.out <- 'results'
dic.path.out <- 'results/dictionary'
dic.out <- file.path(dic.path.out, 'Gryo_dic.csv')
xml.out <- file.path(results.out, 'phs_Gryo.xml')
instance_IRI='https://orcid.org/0000-0001-5237-2330/'
##  ............................................................................
##  Make Dictionary                                                         ####
make_dic <-paste0('./', file.path(dic.path.in, 'cmdPhsDic.R'), ' ', onto.in, ' ', dic.out )
system(make_dic)
##  ............................................................................
##  Make Snippets                                                           ####
make_snps <-paste0('./', file.path(dic.path.in, 'cmdSnips.R'), ' ', dic.out, ' ', 'results/dictionary/snippets.cson' )
system(make_snps)
reticulate::repl_python()
# Input
dic.path.in <- 'phsDictionary'
data.path.in <- 'data'
onto.in <- file.path(data.path.in, 'Gryonoides_merged_ontologies.owl')
phs.file.in <- file.path(data.path.in, 'Gryonoides.phs')
# Output
results.out <- 'results'
dic.path.out <- 'results/dictionary'
dic.out <- file.path(dic.path.out, 'Gryo_dic.csv')
xml.out <- file.path(results.out, 'phs_Gryo.xml')
instance_IRI='https://orcid.org/0000-0001-5237-2330/'
##  ............................................................................
##  Make Dictionary                                                         ####
make_dic <-paste0('./', file.path(dic.path.in, 'cmdPhsDic.R'), ' ', onto.in, ' ', dic.out )
system(make_dic)
##  ............................................................................
##  Make Snippets                                                           ####
make_snps <-paste0('./', file.path(dic.path.in, 'cmdSnips.R'), ' ', dic.out, ' ', 'results/dictionary/snippets.cson' )
system(make_snps)
##  ............................................................................
##  Make Dictionary                                                         ####
make_dic <-paste0('./', file.path(dic.path.in, 'cmdPhsDic.R'), ' ', onto.in, ' ', dic.out )
system(make_dic)
##  ............................................................................
##  Make Snippets                                                           ####
make_snps <-paste0('./', file.path(dic.path.in, 'cmdSnips.R'), ' ', dic.out, ' ', 'results/dictionary/snippets.cson' )
system(make_snps)
reticulate::repl_python()
